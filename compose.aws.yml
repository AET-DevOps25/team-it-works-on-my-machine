services:
  reverse-proxy:
    image: traefik:v3.4
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedByDefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.gh_connector.address=:${GH_CONNECTOR_PORT}"
      - "--entrypoints.genai.address=:${GENAI_PORT}"
      - "--entrypoints.users.address=:${USERS_PORT}"
      - "--entrypoints.grafana.address=:${GRAFANA_PORT}"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.letsencrypt.acme.email=admin@tum.de"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "${GH_CONNECTOR_PORT}:${GH_CONNECTOR_PORT}"
      - "${GENAI_PORT}:${GENAI_PORT}"
      - "${USERS_PORT}:${USERS_PORT}"
      - "${USERS_DB_PORT}:${USERS_DB_PORT}"
      - "${GRAFANA_PORT}:${GRAFANA_PORT}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./letsencrypt:/letsencrypt

  client:
    image: ghcr.io/aet-devops25/team-it-works-on-my-machine/client:latest
    environment:
      - ASSET_DIR=/usr/share/nginx/html
      - APP_PREFIX=PREFIX_
      - PREFIX_GH_CONNECTOR_URL=${GH_CONNECTOR_URL}
      - PREFIX_GH_OAUTH_CLIENT_ID=${GH_OAUTH_CLIENT_ID}
      - PREFIX_USERS_URL=${USERS_URL}
    depends_on:
      - gh-connector
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.client.rule=Host(`${CLIENT_HOST}`)"
      - "traefik.http.services.client.loadbalancer.server.port=${CLIENT_PORT}"
      - "traefik.http.routers.client.entrypoints=websecure"
      - "traefik.http.routers.client.tls.certresolver=letsencrypt"
      - "traefik.http.middlewares.client-compress.compress=true"
      - "traefik.http.routers.client.middlewares=client-compress"
      - "traefik.http.routers.client.priority=1"

  gh-connector:
    image: ghcr.io/aet-devops25/team-it-works-on-my-machine/gh-connector:latest
    environment:
      - CLIENT_URL=${CLIENT_URL}
      - GENAI_URL=${GENAI_URL}
      - USERS_URL=${USERS_URL}
      - GH_OAUTH_CLIENT_ID=${GH_OAUTH_CLIENT_ID}
      - GH_OAUTH_CLIENT_SECRET=${GH_OAUTH_CLIENT_SECRET}
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.gh-connector.rule=Host(`${GH_CONNECTOR_HOST}`)"
      - "traefik.http.services.gh-connector.loadbalancer.server.port=${GH_CONNECTOR_PORT}"
      - "traefik.http.routers.gh-connector.entrypoints=gh_connector"
      - "traefik.http.routers.gh-connector.tls.certresolver=letsencrypt"

  genai-python:
    image: ghcr.io/aet-devops25/team-it-works-on-my-machine/genai:latest
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GENAI_PORT=${GENAI_PORT}
      - GENAI_URL=${GENAI_URL}
      - QDRANT_API_KEY=${QDRANT_API_KEY}
      - QDRANT_URL=${QDRANT_URL}
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.genai.rule=Host(`${GENAI_HOST}`)"
      - "traefik.http.services.genai.loadbalancer.server.port=${GENAI_PORT}"
      - "traefik.http.routers.genai.entrypoints=genai"
      - "traefik.http.routers.genai.tls.certresolver=letsencrypt"

  users:
    image: ghcr.io/aet-devops25/team-it-works-on-my-machine/users:latest
    environment:
      - USERS_DB_HOST=users-db
      - USERS_DB_USERNAME=${USERS_DB_USERNAME}
      - USERS_DB_PASSWORD=${USERS_DB_PASSWORD}
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.users.rule=Host(`${USERS_HOST}`)"
      - "traefik.http.services.users.loadbalancer.server.port=${USERS_PORT}"
      - "traefik.http.routers.users.entrypoints=users"
      - "traefik.http.routers.users.tls.certresolver=letsencrypt"

  users-db:
    image: postgres:15-alpine
    environment:
      -  POSTGRES_DB=users
      -  POSTGRES_USER=${USERS_DB_USERNAME}
      -  POSTGRES_PASSWORD=${USERS_DB_PASSWORD}
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:v2.52.0
    container_name: prometheus
    ports:
      - "${PROMETHEUS_PORT}:9090"
    volumes:
      - ./prometheus/prometheus.docker.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - "${GRAFANA_PORT}:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_FEATURE_TOGGLES_ENABLE=logsInExplore
      - GF_LOG_CONSOLECOLORS=true
      - PROMETHEUS_URL=http://prometheus:${PROMETHEUS_PORT}
      - LOKI_URL=http://loki:${LOKI_PORT}
    depends_on:
      - prometheus
      - loki
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`${GRAFANA_HOST}`)"
      - "traefik.http.services.grafana.loadbalancer.server.port=${GRAFANA_PORT}"
      - "traefik.http.routers.grafana.entrypoints=grafana"
      - "traefik.http.routers.grafana.tls.certresolver=letsencrypt"

  promtail:
    image: grafana/promtail:latest
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./promtail/promtail.yml:/etc/promtail/promtail.yml
    command: -config.file=/etc/promtail/promtail.yml
    depends_on:
      - loki
    restart: unless-stopped

  loki:
    image: grafana/loki:2.9.0
    ports:
      - "${LOKI_PORT}:9092"
    volumes:
      - ./loki/loki-config.yaml:/etc/loki/loki-config.yaml:ro
    command: -config.file=/etc/loki/loki-config.yaml
    restart: unless-stopped

volumes:
  users-db-storage:
  prometheus_data:
  grafana-storage:
  loki-storage:
  promtail-storage:
