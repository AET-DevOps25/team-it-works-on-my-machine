# No changes needed below this line
namespace:
  create: false

meta:
  name: workflow-geniee
  url: workflow-genie.student.k8s.aet.cit.tum.de
  monitoringname: monitoring-womm
  monitoringurl: monitoring-womm.student.k8s.aet.cit.tum.de

components:
  client:
    image:
      repository: ghcr.io/aet-devops25/team-it-works-on-my-machine/client
      tag: latest
      pullPolicy: Always
    service:
      type: ClusterIP
      port: 80
      targetPort: 80
    replicaCount: 1
    env:
      - name: ASSET_DIR
        value: /usr/share/nginx/html
      - name: APP_PREFIX
        value: PREFIX_
      - name: PREFIX_GH_CONNECTOR_URL
        value: https://workflow-genie.student.k8s.aet.cit.tum.de/api/gh-connector
    envFromSecret:
      - name: PREFIX_GH_OAUTH_CLIENT_ID
        secretName: workflow-genie-secrets
        secretKey: GH_OAUTH_CLIENT_ID

  ghconnector:
    image:
      repository: ghcr.io/aet-devops25/team-it-works-on-my-machine/gh-connector
      tag: latest
      pullPolicy: Always
    service:
      type: ClusterIP
      port: 3000
      targetPort: 3000
    replicaCount: 1
    env:
      - name: CLIENT_URL
        value: https://workflow-genie.student.k8s.aet.cit.tum.de
      - name: GENAI_URL
        value: genai-service:3001
      - name: USERS_URL
        value: users-service:3002/api/users
      - name: GH_CONNECTOR_PREFIX
        value: /api/gh-connector
      - name: JAVA_TOOL_OPTIONS
        value: "-Djava.net.preferIPv4Stack=true"
      - name: JAVA_TOOL_OPTIONS
        value: "-Djava.net.preferIPv6Stack=false"
    envFromSecret:
      - name: GH_OAUTH_CLIENT_ID
        secretName: workflow-genie-secrets
        secretKey: GH_OAUTH_CLIENT_ID
      - name: GH_OAUTH_CLIENT_SECRET
        secretName: workflow-genie-secrets
        secretKey: GH_OAUTH_CLIENT_SECRET

  genai:
    image:
      repository: ghcr.io/aet-devops25/team-it-works-on-my-machine/genai
      tag: latest
      pullPolicy: Always
    service:
      type: ClusterIP
      port: 3001
      targetPort: 3001
    replicaCount: 1
    envFromSecret:
      - name: OPENAI_API_KEY
        secretName: workflow-genie-secrets
        secretKey: OPENAI_API_KEY
      - name: QDRANT_API_KEY
        secretName: workflow-genie-secrets
        secretKey: QDRANT_API_KEY
      - name: QDRANT_URL
        secretName: workflow-genie-secrets
        secretKey: QDRANT_URL

  users:
    image:
      repository: ghcr.io/aet-devops25/team-it-works-on-my-machine/users
      tag: latest
      pullPolicy: Always
    service:
      type: ClusterIP
      port: 3002
      targetPort: 3002
    replicaCount: 1
    env:
      - name: USERS_DB_HOST
        value: usersdb-service
      - name: USERS_DB_USERNAME
        value: postgres
      - name: USERS_DB_PASSWORD
        value: 123456
      - name: USERS_PREFIX
        value: /api/users

  usersdb:
    image:
      repository: docker.io/postgres
      tag: 15-alpine
      pullPolicy: Always
    service:
      type: ClusterIP
      port: 5432
      targetPort: 5432
    replicaCount: 1
    volumes:
      - name: usersdb-volume
        mountPath: /var/lib/postgresql/data
        storage: 1Gi
    env:
      - name: POSTGRES_DB
        value: users
      - name: POSTGRES_USER
        value: postgres
      - name: POSTGRES_PASSWORD
        value: 123456
      - name: PGDATA
        value: /var/lib/postgresql/data/pgdata

  prometheus:
    namespace: monitoring-womm
    image:
      repository: ghcr.io/aet-devops25/team-it-works-on-my-machine/prometheus
      tag: latest
      pullPolicy: Always
    args:
      - "--web.external-url=/prometheus/"
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus/"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--web.enable-lifecycle"
    service:
      type: ClusterIP
      port: 9090
      targetPort: 9090
    replicaCount: 1
    # volumes:
    #   - name: prometheus-volume
    #     mountPath: /prometheus
    #     storage: 1Gi

  grafana:
    namespace: monitoring-womm
    image:
      repository: ghcr.io/aet-devops25/team-it-works-on-my-machine/grafana
      tag: latest
      pullPolicy: Always
    env:
      - name: GF_SERVER_ROOT_URL
        value: /grafana/
      - name: GF_SERVER_SERVE_FROM_SUB_PATH
        value: "true"
      - name: POSTGRES_DB
        value: users
      - name: GF_SECURITY_ADMIN_USER
        value: admin
      - name: GF_SECURITY_ADMIN_PASSWORD
        value: admin
      - name: GF_USERS_ALLOW_SIGN_UP
        value: "false"
      - name: GF_FEATURE_TOGGLES_ENABLE
        value: logsInExplore
      - name: GF_LOG_CONSOLECOLORS
        value: "true"
      - name: PROMETHEUS_URL
        value: http://prometheus-service:9090/prometheus
      - name: LOKI_URL
        value: http://loki-service:9092
    service:
      type: ClusterIP
      port: 9091
      targetPort: 3000
    replicaCount: 1

ingress:
  enabled: true
  className: "nginx"
  tls: true
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
