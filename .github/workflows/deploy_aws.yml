name: Deploy Docker Images

on:
  workflow_dispatch:
    inputs:
      EC2_PUBLIC_IP:
        description: 'Public IP of the AWS EC2 instance'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: AWS
      url: 'https://client.${{ inputs.EC2_PUBLIC_IP }}.nip.io' 
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Copy Docker Compose File From Repo to VM Host
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ inputs.EC2_PUBLIC_IP }}
          username: ${{ vars.AWS_EC2_USER }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          source: "./compose.aws.yml"
          target: /home/${{ vars.AWS_EC2_USER }}

      - name: SSH to VM and Create .env.prod
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ inputs.EC2_PUBLIC_IP }}
          username: ${{ vars.AWS_EC2_USER }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          script: |
            rm .env.prod
            touch .env.prod

            echo "CLIENT_PORT=443" >> .env.prod
            echo "GH_CONNECTOR_PORT=3000" >> .env.prod
            echo "GENAI_PORT=3001" >> .env.prod
            echo "USERS_PORT=3002" >> .env.prod
            echo "USERS_DB_PORT=5432" >> .env.prod

            echo "CLIENT_HOST=${{ inputs.EC2_PUBLIC_IP }}.nip.io" >> .env.prod
            echo "CLIENT_URL=https://\${CLIENT_HOST}:\${CLIENT_PORT}" >> .env.prod
            echo "GH_CONNECTOR_HOST=${{ inputs.EC2_PUBLIC_IP }}.nip.io" >> .env.prod
            echo "GH_CONNECTOR_URL=https://\${GH_CONNECTOR_HOST}:\${GH_CONNECTOR_PORT}" >> .env.prod
            echo "GENAI_HOST=genai.${{ inputs.EC2_PUBLIC_IP }}.nip.io" >> .env.prod
            echo "GENAI_URL=https://\${GENAI_HOST}:\${GENAI_PORT}" >> .env.prod
            echo "USERS_HOST=user.${{ inputs.EC2_PUBLIC_IP }}.nip.io" >> .env.prod
            echo "USERS_URL=https://\${USERS_HOST}:\${USERS_PORT}" >> .env.prod

            echo "USERS_DB_HOST=user-db.${{ inputs.EC2_PUBLIC_IP }}.nip.io" >> .env.prod
            echo "USERS_DB_USERNAME=${{ vars.USER_DB_USERNAME }}" >> .env.prod
            echo "USERS_DB_PASSWORD=${{ secrets.USER_DB_PASSWORD }}" >> .env.prod

            echo "DEEPSEEK_API_KEY=${{ secrets.DEEPSEEK_API_KEY }}" >> .env.prod
            echo "GH_OAUTH_CLIENT_ID=${{ vars.GH_OAUTH_CLIENT_ID }}" >> .env.prod
            echo "GH_OAUTH_CLIENT_SECRET=${{ secrets.GH_OAUTH_CLIENT_SECRET }}" >> .env.prod


      - name: SSH to VM and Execute Docker-Compose Up
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ inputs.EC2_PUBLIC_IP }}
          username: ${{ vars.AWS_EC2_USER }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          script: |
            echo "Logging into Docker registry..."
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            echo "Starting Docker Compose..."
            docker compose -f compose.aws.yml --env-file=.env.prod up --pull=always -d
